tosca_definitions_version: cloudify_dsl_1_3

imports:
  - ../../types/azure-types.yaml

inputs:

  vm_size:
    type: string
    required: true
    default: Standard_A2

  vm_os_family:
    type: string
    required: true
    default: linux

  vm_image_publisher:
    type: string
    required: true
    default: Canonical

  vm_image_offer:
    type: string
    required: true
    default: UbuntuServer

  vm_image_sku:
    type: string
    required: true
    default: 14.04.4-LTS

  vm_image_version:
    type: string
    required: true
    default: 14.04.201604060

  vm_os_username:
    description: >
      Username to create as the VM's administrator user
    type: string
    required: true
    default: cloudify

  vm_os_password:
    description: >
      Password to use for the VM's administrator user
    type: string
    required: true
    default: Cl0ud1fy!

  vm_os_pubkeys:
    description: the public key
    default:
    - path: {concat:[ '/home/', { get_input: vm_os_username }, '/.ssh/authorized_keys' ]}
      keyData:
        "ssh-rsa AAAAA3----your-key-here----aabbzz"

  vm_os_pubkey_auth_only:
    default: true

node_templates:

  haproxy_frontend_host:
    type: nodecellar.nodes.MonitoredServer
    properties:
      name: {concat:[{get_input: resource_prefix},haproxyhost,{get_input: resource_suffix}]}
      azure_config: { get_input: azure_configuration }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.connected_to_storage_account
      target: storage_account
    - type: cloudify.azure.relationships.connected_to_availability_set
      target: availability_set
    - type: cloudify.azure.relationships.connected_to_nic
      target: haproxy_host_nic

  mongo_host:
    type: nodecellar.nodes.MonitoredServer
    properties:
      name: {concat:[{get_input: resource_prefix},mongohost,{get_input: resource_suffix}]}
      azure_config: { get_input: azure_configuration }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.connected_to_storage_account
      target: storage_account
    - type: cloudify.azure.relationships.connected_to_availability_set
      target: availability_set
    - type: cloudify.azure.relationships.connected_to_nic
      target: mongo_host_nic

  nodejs_host:
    type: nodecellar.nodes.MonitoredServer
    properties:
      name: {concat:[{get_input: resource_prefix},nodejshost,{get_input: resource_suffix}]}
      azure_config: { get_input: azure_configuration }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.connected_to_storage_account
      target: storage_account
    - type: cloudify.azure.relationships.connected_to_availability_set
      target: availability_set
    - type: cloudify.azure.relationships.connected_to_nic
      target: nodejs_host_nic
